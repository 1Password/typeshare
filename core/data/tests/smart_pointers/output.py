"""
 Generated by typeshare 1.11.0
"""
from __future__ import annotations

from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import List, Union


class ArcyColors(BaseModel):
    """
    This is a comment.
    """
    red: int
    blue: str
    green: List[str]


class CellyColors(BaseModel):
    """
    This is a comment.
    """
    red: str
    blue: List[str]


class CowyColors(BaseModel):
    """
    This is a comment.
    """
    lifetime: str


class LockyColors(BaseModel):
    """
    This is a comment.
    """
    red: str


class MutexyColors(BaseModel):
    """
    This is a comment.
    """
    blue: List[str]
    green: str


class RcyColors(BaseModel):
    """
    This is a comment.
    """
    red: str
    blue: List[str]
    green: str


class BoxyColorsTypes(str, Enum):
    RED = "Red"
    BLUE = "Blue"
    GREEN = "Green"



class BoxyColorsGreen(BaseModel):
    content: str

class BoxyColors(BaseModel):
    model_config = ConfigDict(use_enum_values=True)
    type: BoxyColorsTypes
    content: Union[BoxyColorsGreen, None]


    @classmethod
    def new_boxy_colors_red(cls) -> BoxyColors:
        return cls(
            type=BoxyColorsTypes.RED,
            content=None
	    )


    @classmethod
    def new_boxy_colors_blue(cls) -> BoxyColors:
        return cls(
            type=BoxyColorsTypes.BLUE,
            content=None
	    )


    @classmethod
    def new_boxy_colors_green(cls, content : BoxyColorsGreen):
        return cls(
            type=BoxyColorsTypes.GREEN,
            content=content
        )
