"""
 Generated by typeshare 1.11.0
"""
from __future__ import annotations

from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Union


class SomeEnumTypes(str, Enum):
    CONTEXT = "Context"
    OTHER = "Other"

class SomeEnumContext(BaseModel):
    content: str

class SomeEnumOther(BaseModel):
    content: int

class SomeEnum(BaseModel):
    model_config = ConfigDict(use_enum_values=True)
    type: SomeEnumTypes
    content: Union[SomeEnumContext, SomeEnumOther]


    @classmethod
    def new_some_enum_context(cls, content : SomeEnumContext):
        return cls(
            type=SomeEnumTypes.CONTEXT,
            content=content
        )


    @classmethod
    def new_some_enum_other(cls, content : SomeEnumOther):
        return cls(
            type=SomeEnumTypes.OTHER,
            content=content
        )
