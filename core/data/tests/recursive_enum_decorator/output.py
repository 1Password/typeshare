"""
 Generated by typeshare 1.12.0
"""
from __future__ import annotations

from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import Union


class MoreOptionsExactly(BaseModel):
    """
    Generated type representing the anonymous struct variant `Exactly` of the `MoreOptions` Rust enum
    """
    config: str


class MoreOptionsBuilt(BaseModel):
    """
    Generated type representing the anonymous struct variant `Built` of the `MoreOptions` Rust enum
    """
    top: MoreOptions


class MoreOptionsTypes(str, Enum):
    NEWS = "news"
    EXACTLY = "exactly"
    BUILT = "built"

class MoreOptions(BaseModel):
    model_config = ConfigDict(use_enum_values=True)
    type: MoreOptionsTypes
    content: Union[bool, MoreOptionsExactly, MoreOptionsBuilt]


    @classmethod
    def new_more_options_news(cls, content : bool):
        return cls(
            type=MoreOptionsTypes.NEWS,
            content=content
        )


    @classmethod
    def new_more_options_exactly(cls, config: str):
        return cls(
            type=MoreOptionsTypes.EXACTLY,
            content=MoreOptionsExactly(config = config)
	    )


    @classmethod
    def new_more_options_built(cls, top: MoreOptions):
        return cls(
            type=MoreOptionsTypes.BUILT,
            content=MoreOptionsBuilt(top = top)
	    )
class OptionsTypes(str, Enum):
    RED = "red"
    BANANA = "banana"
    VERMONT = "vermont"

class Options(BaseModel):
    model_config = ConfigDict(use_enum_values=True)
    type: OptionsTypes
    content: Union[bool, str, Options]


    @classmethod
    def new_options_red(cls, content : bool):
        return cls(
            type=OptionsTypes.RED,
            content=content
        )


    @classmethod
    def new_options_banana(cls, content : str):
        return cls(
            type=OptionsTypes.BANANA,
            content=content
        )


    @classmethod
    def new_options_vermont(cls, content : Options):
        return cls(
            type=OptionsTypes.VERMONT,
            content=content
        )
