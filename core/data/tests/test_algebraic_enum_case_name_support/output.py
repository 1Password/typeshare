"""
 Generated by typeshare 1.11.0
"""
from __future__ import annotations

from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing import List, Union


class ItemDetailsFieldValue(BaseModel):
    pass

class AdvancedColorsTypes(str, Enum):
    STRING = "string"
    NUMBER = "number"
    NUMBER_ARRAY = "number-array"
    REALLY_COOL_TYPE = "reallyCoolType"

class AdvancedColorsString(BaseModel):
    content: str

class AdvancedColorsNumber(BaseModel):
    content: int

class AdvancedColorsNumberArray(BaseModel):
    content: List[int]

class AdvancedColorsReallyCoolType(BaseModel):
    content: ItemDetailsFieldValue

class AdvancedColors(BaseModel):
    model_config = ConfigDict(use_enum_values=True)
    type: AdvancedColorsTypes
    content: Union[AdvancedColorsString, AdvancedColorsNumber, AdvancedColorsNumberArray, AdvancedColorsReallyCoolType]


    @classmethod
    def new_advanced_colors_string(cls, content : AdvancedColorsString):
        return cls(
            type=AdvancedColorsTypes.STRING,
            content=content
        )


    @classmethod
    def new_advanced_colors_number(cls, content : AdvancedColorsNumber):
        return cls(
            type=AdvancedColorsTypes.NUMBER,
            content=content
        )


    @classmethod
    def new_advanced_colors_number_array(cls, content : AdvancedColorsNumberArray):
        return cls(
            type=AdvancedColorsTypes.NUMBER_ARRAY,
            content=content
        )


    @classmethod
    def new_advanced_colors_really_cool_type(cls, content : AdvancedColorsReallyCoolType):
        return cls(
            type=AdvancedColorsTypes.REALLY_COOL_TYPE,
            content=content
        )
